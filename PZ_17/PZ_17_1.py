#Скляров Владимир Дмитриевич. Группа - ИС-23.
# 21 Вариант.

#Условие создайте класс Календарь, который имеет атрибуты год, месяу и день. Добавьте методы
# для определения дня недели, проверки на високосный год и определения количества дней в месяце.


class Kalendar:
    def __init__(self, year, months, day):
        """Инициализация данных."""
        self.year = year
        self.months = months
        self.day = day

    def week_definition(self):
        """Функция для нахождения дня недели."""
        days = {1: "Понедельник", 2: "Вторник", 3: "Среда", 4: "Четверг", 5: "Пятница", 6: "Суббота", 7: "Воскресенье"} #Словарь - хранение данных.
        if self.day > 7: # Условие если данное число больше 7.
            now_day = self.day // 7 #Деление без остатка
            return f"Сегодняшний день недели: {days[now_day]}" #Возвращение значения с учетом деления.
        return f"Сегодняшний день недели: {days[self.day]}" #Возвращение числа - если оно не больше 7

    def year_v_definition(self):
        """Функция для определения является ли год високосным или Нет."""
        if self.year % 4 == 0: #Проверка условия, что год является високосным.
            return self.year, "Является високосным годом" #Возвращение значения.
        else: #Условие обратному if.
            return self.year, "Не является високосным годом" #Возвращение значенияю

    def number_days_in_months(self):
        """Функция для определения количества дней в месяце."""
        self.months_days = {"Январь": 31, "Февраль": 28, "Апрель": 30, "Март": 31, "Май": 31,
                            "Июнь": 30, "Июль": 31, "Август": 31, "Сентябрь": 30, "Октябрь": 31,"Декабрь": 31} #Словарь - хранение данных.
        if self.year % 4 == 0: #Проверка - год високосный или нет.
            self.months_days["Февраль"] += 1
            return "Количество дней в месяце: " + str(self.months_days[self.months]) #Вывод значения
        else: #Обратное if.
            return "Количество дней в месяце: " + str(self.months_days[self.months]) #Возвращение значения.

obj_1 = Kalendar(2000, "Январь", 20) #1-ый экземпляр.
print(obj_1.number_days_in_months())
print(obj_1.week_definition())
print(obj_1.year_v_definition())

print() #Пробел между вызывами.

obj_2 = Kalendar(2008, "Февраль", 6) #2-ой экземпляр.
print(obj_2.number_days_in_months())
print(obj_2.week_definition())
print(obj_2.year_v_definition())