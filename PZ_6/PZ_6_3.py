import random
import math
'''21 Вариант Скляров'''
'''Постановка задачи..............
 Дано множество A из N точек на плоскости и точка B (точки заданы своими
 координатами х, у). Найти точку из множества A, наиболее близкую к точке B.
 Расстояние R между точками с координатами (x1, y1) и (x2, у2) вычисляется по
 формуле:
 R = √(x2 – x1)2 + (у2 – y1)2
    .
 Для хранения данных о каждом наборе точек следует использовать по два списка: первый
 список для хранения абсцисс, второй — для хранения ординат.'''


def rasstoyanie(x1, x2, y1, y2): ###Функция которая принимает 4 параметра.
    R = math.sqrt(((x2 - x1)**2) + ((y2 - y1)**2)) ###Формула по которой находится расстояние
    list_2.append(R)

try:
    B = []
    c = int(input('Введите число точек в массиве A: ')) # Ввод кол-ва точек
    list_2 = []
    list_x = [random.randint(0, 100) for i in range(c)] # Добавление в список абсцисс и ординат точек
    list_y = [random.randint(0, 100) for i in range(c)]
    '''Ввод данных пользователем в переменную a,b в int формате'''
    a, b = int(input('Введите x координату для точки B: ')), int(input('Введите y координату для точки B: '))
    B.append(a)
    B.append(b)
except ValueError:  ### Обработчик исключений, который выводит ошибку, в случае если введённое число c не в int типе
    print('Ошибка')
else: ### Условие иначе, где выполняется продолжение блока try
    print('Количество всех точке по x в массиве A:', list_x) ### Вывод списка list_x в котором хрантся все x
    print('Количество всех точке по y в массиве A:', list_y) ### Вывод списка list_y в котором хрантся все y
    print(f'Координаты точки B: x->{B[0]}, y->{B[1]}') ### Вывод координаты точки в списке B, x и y.

    for i in range(len(list_x)): #Цикл в котором перебираются все значения в списке list_x
        rasstoyanie(B[0], list_x[i], B[-1], list_y[i])
    else:
        id = 0
        while id <= c - 1: # Цикл в котором проверяются все значения в списке list_2 и выводятся близжайшие точки
            if math.sqrt(((list_x[id] - B[0])**2) + ((list_y[id] - B[-1])**2)) == min(list_2):
                print(f"Близжайшая точка к B имеет координаты-> x:{list_x[id]}, y:{list_y[id]}")
            id += 1