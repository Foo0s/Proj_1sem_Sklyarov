import random
'''21 Вариант Скляров'''
'''Постановка задачи..............
   Дано множество A из N точек на плоскости и точка B (точки заданы своими
    координатами х, у). Найти точку из множества A, наиболее близкую к точке B.
    Расстояние R между точками с координатами (x1, y1) и (x2, у2) вычисляется по
    формуле:
    R = √(x2 – x1)2 + (у2 – y1)2
    .
    Для хранения данных о каждом наборе точек следует использовать по два списка: первый
    список для хранения абсцисс, второй — для хранения ординат.'''

def rasstoyanie(x1, x2, y1, y2): ###Функция которая принимает 4 параметра.
    R = (x2 - x1) + (y2 - y1)    ###Формула по которой находится расстояние
    list_2.append(R)             ###Добавление в список значения переменной R
try:    ###Блок обработчика исключений, в нём выполняется код, без ошибок
    B = []      ### Переменная B ссылается на пустой список
    c = int(input('Введите размер списка: '))   ### В переменную c записываются вводимое значение пользователем в int
    list_2 = []     ### Создание пустого списка, переменная list_2 ссылается на него.
    if c % 2 == 0:  ### Условие что вводимое пользователем число является чётным, тк точки должны иметь x и y координаты
        A = [random.randint(0, 100) for a in range(c)]  ### Создание списка в котором генерируется рандомное количество
### чисел до вводимого пользователя числа. В диапазоне от 0-100.
    else:       ### Условие иначе если не выполняется условие if
        print('Ошибка') ### Вывод Ошибка

    '''Ввод данных пользователем в переменную a,b в int формате'''
    a, b = int(input('Введите x координату для точки B: ')), int(input('Введите y координату для точки B: '))
    B.append(a) ###Добавление в список значения переменной a - это x координата.
    B.append(b) ###Добавление в список значения переменной b - это y координата.
    abscisya = [] ### Создание пустого списка в переменной abscisya в нём хранятся все x
    ordinati = [] ### Создание пустого списка в переменной ordinati в нём хранятся все y
    '''Цикл который добавляет в список значения абсцисс'''
    for i in A[0:-1:2]: ### Пока i в списке A от 0 значения до конечного с шагом 2
        abscisya.append(i)  ### Добавление в список abscisya значения i
    '''Цикл который добавляет в список значения ординат'''
    for number in A[1:-1:2]: ### Пока i в списке A от 1 значения до конечного с шагом 2
        ordinati.append(number) ### Добавление в список ordinaty значения i
    ordinati.append(A[-1])  ### Добавление конечного значения из списка A в список ordinaty
except NameError: ### Обработчик исключений который выводит ошибку в случае, если переменной c не существует(то есть
    # введенно не чётное значение
    print('Ошибка') ###Вывод ошибки
except ValueError:  ### Обработчик исключений, который выводит ошибку, в случае если введённое число c не в int типе
    print('Ошибка') ##№ Вывод ошибки
else: ### Условие иначе, где выполняется продолжение блока try
    print('Количество всех точке по y в массиве A:', ordinati) ### Вывод списка ordinati в котором хрантся все y
    print('Количество всех точке по x в массиве A:', abscisya) ### Вывод списка abscisya в котором хрантся все x
    print('Массив A: ', A) ### Вывод всего списка A
    print(f'Координаты точки B: x->{B[0]}, y->{B[1]}') ### Вывод координаты точки в списке B, x и y.
    i = 0 ### Счётчик, переменная в которой изначальное значение 0
    while i < c // 2: ### Цикл: пока значение в переменной i меньше c делённое на 2, чтобы брались пары x-y
        x = abscisya[i] ### Переменная x ссылается на список abscisya в который добавляется значения счётчика i
        y = ordinati[i] ### Переменная y ссылается на список ordinati в который добавляется значения счётчика i
        i += 1  ### Поэтапное прибавление к счётчику значения 1
        rasstoyanie(B[0], x, B[1], y) ### Вызов функции rasstoyanie в которую передаются значения переменных x,y и
        ### Значения списка B по начальному индексу. Значения списка B по конечному индексу всего 2 знач. x и y.
    else: ### Условие иначе в котором выводится список всех точек и близжайшая точка к точке заданной в списке B
        i = 0 ### Переменная i - счётчик в которой изначальное значение это 0
        while i < c // 2:  ### Цикл: пока значение в переменной i меньше c делённое на 2, чтобы брались пары x-y
            x = abscisya[i] ### Переменная x ссылается на список abscisya в который добавляется значения счётчика i
            y = ordinati[i] ### Переменная y ссылается на список ordinati в который добавляется значения счётчика i
            if x - B[0] + y - B[1] == min(list_2): ## Проверка условие что выражение x - B[0] + y - B[1] равняется
                # минимальному значению в списке list_2 -> min(list_2)
                print(f"Список расстояния точек: {list_2}") ### Вывод всех расстояний точек в списке list_2
                print(f"Близжайшие точки к точке B это: x->{x}, y->{y}") ### Вывод ближайшей точки к точке в списке B
            i += 1 ### Поэтапное прибавление к счётчику значения 1